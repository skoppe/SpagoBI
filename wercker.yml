box: ctgbmst/ctgb-build
build:
  steps:
  - script:
      name: install maven
      code: |
        apt-get update
        apt-get -y install maven unzip
  - script:
      name: maven cache
      code: |
        mkdir -p ~/.m2
        mkdir -p $WERCKER_CACHE_DIR/.m2/repository
        cp docker/maven-local-settings.xml ~/.m2/settings.xml
  - script:
      name: compile
      code: |
        cd spagobi-parent
        mvn package
  - script:
      name: fetch dependencies
      code: |
        mkdir -p $WERCKER_OUTPUT_DIR/jar
        curl -o $WERCKER_OUTPUT_DIR/jar/commons-logging-1.1.1.jar http://central.maven.org/maven2/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar
        curl -o $WERCKER_OUTPUT_DIR/jar/commons-logging-api-1.1.jar http://central.maven.org/maven2/commons-logging/commons-logging-api/1.1/commons-logging-api-1.1.jar
        curl -o $WERCKER_OUTPUT_DIR/jar/concurrent.jar https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/oswego-concurrent/concurrent/1.3.4/concurrent-1.3.4.jar
        curl -o $WERCKER_OUTPUT_DIR/jar/foo-commonj.jar http://central.maven.org/maven2/org/codehaus/fabric3/api/commonj/1.1.1/commonj-1.1.1.jar
        curl -o $WERCKER_OUTPUT_DIR/jar/geronimo-commonj_1.1_spec-1.0.jar http://central.maven.org/maven2/org/apache/geronimo/specs/geronimo-commonj_1.1_spec/1.0/geronimo-commonj_1.1_spec-1.0.jar
        curl -o $WERCKER_OUTPUT_DIR/jar/hsqldb1_8_0_2.jar http://central.maven.org/maven2/org/hsqldb/hsqldb/1.8.0.10/hsqldb-1.8.0.10.jar
        curl -o $WERCKER_OUTPUT_DIR/jar/iijdbc.jar http://central.maven.org/maven2/com/ingres/jdbc/iijdbc/10.0-4.0.6/iijdbc-10.0-4.0.6.jar
        curl -o $WERCKER_OUTPUT_DIR/jar/mysql-connector-java-5.0.8-bin.jar http://central.maven.org/maven2/mysql/mysql-connector-java/5.1.44/mysql-connector-java-5.1.44.jar
        curl -o $WERCKER_OUTPUT_DIR/jar/ojdbc5.jar http://maven.jahia.org/maven2/com/oracle/ojdbc5/11.2.0.3/ojdbc5-11.2.0.3.jar
        curl -o $WERCKER_OUTPUT_DIR/jar/postgresql-9.3-1101.jdbc3.jar https://mvnrepository.com/artifact/org.postgresql/postgresql/42.1.4
  - script:
      name: Move war's to output dir
      code: |
        mkdir -p $WERCKER_OUTPUT_DIR/{webapps,scripts}
        cd $WERCKER_SOURCE_DIR
        mkdir -p $WERCKER_OUTPUT_DIR/{SpagoBIAccessibilityEngine,SpagoBIBirtReportEngine,SpagoBIChartEngine,SpagoBICockpitEngine,SpagoBICommonJEngine,SpagoBIConsoleEngine,SpagoBIDataMiningEngine,SpagoBIGeoEngine,SpagoBIGeoReportEngine,SpagoBIJasperReportEngine,SpagoBIJPivotEngine,SpagoBIMobileEngine,SpagoBINetworkEngine,SpagoBI,SpagoBIQbeEngine,SpagoBISDK,SpagoBISocialAnalysis,SpagoBITalendEngine,SpagoBIWhatIfEngine}
        unzip ./SpagoBIAccessibilityEngine/target/SpagoBIAccessibilityEngine.war -d $WERCKER_OUTPUT_DIR/webapps/SpagoBIAccessibilityEngine
        unzip ./SpagoBIBirtReportEngine/target/SpagoBIBirtReportEngine.war -d $WERCKER_OUTPUT_DIR/webapps/SpagoBIBirtReportEngine
        unzip ./SpagoBIChartEngine/target/SpagoBIChartEngine.war -d $WERCKER_OUTPUT_DIR/webapps/SpagoBIChartEngine
        unzip ./SpagoBICockpitEngine/target/SpagoBICockpitEngine.war -d $WERCKER_OUTPUT_DIR/webapps/SpagoBICockpitEngine
        unzip ./SpagoBICommonJEngine/target/SpagoBICommonJEngine.war -d $WERCKER_OUTPUT_DIR/webapps/SpagoBICommonJEngine
        unzip ./SpagoBIConsoleEngine/target/SpagoBIConsoleEngine.war -d $WERCKER_OUTPUT_DIR/webapps/SpagoBIConsoleEngine
        unzip ./SpagoBIDataMiningEngine/target/SpagoBIDataMiningEngine.war -d $WERCKER_OUTPUT_DIR/webapps/SpagoBIDataMiningEngine
        unzip ./SpagoBIGeoEngine/target/SpagoBIGeoEngine.war -d $WERCKER_OUTPUT_DIR/webapps/SpagoBIGeoEngine
        unzip ./SpagoBIGeoReportEngine/target/SpagoBIGeoReportEngine.war -d $WERCKER_OUTPUT_DIR/webapps/SpagoBIGeoReportEngine
        unzip ./SpagoBIJasperReportEngine/target/SpagoBIJasperReportEngine.war -d $WERCKER_OUTPUT_DIR/webapps/SpagoBIJasperReportEngine
        unzip ./SpagoBIJPivotEngine/target/SpagoBIJPivotEngine.war -d $WERCKER_OUTPUT_DIR/webapps/SpagoBIJPivotEngine
        unzip ./SpagoBIMobileEngine/target/SpagoBIMobileEngine.war -d $WERCKER_OUTPUT_DIR/webapps/SpagoBIMobileEngine
        unzip ./SpagoBINetworkEngine/target/SpagoBINetworkEngine.war -d $WERCKER_OUTPUT_DIR/webapps/SpagoBINetworkEngine
        unzip ./SpagoBIProject/target/SpagoBI.war -d $WERCKER_OUTPUT_DIR/webapps/SpagoBI
        unzip ./SpagoBIQbeEngine/target/SpagoBIQbeEngine.war -d $WERCKER_OUTPUT_DIR/webapps/SpagoBIQbeEngine
        unzip ./SpagoBISocialAnalysis/target/SpagoBISocialAnalysis.war -d $WERCKER_OUTPUT_DIR/webapps/SpagoBISocialAnalysis
        unzip ./SpagoBITalendEngine/target/SpagoBITalendEngine.war -d $WERCKER_OUTPUT_DIR/webapps/SpagoBITalendEngine
        cp ./docker/entrypoint.sh $WERCKER_OUTPUT_DIR/scripts/entrypoint.sh
        cp ./docker/server.xml $WERCKER_OUTPUT_DIR/scripts/server.xml
        cp ./docker/MySQL_create.sql $WERCKER_OUTPUT_DIR/scripts/MySQL_create.sql
        cp ./docker/MySQL_create_quartz_schema.sql $WERCKER_OUTPUT_DIR/scripts/MySQL_create_quartz_schema.sql
        cp ./docker/MySQL_create_social.sql $WERCKER_OUTPUT_DIR/scripts/MySQL_create_social.sql

deploy-docker-hub:
  box: bitnami/tomcat:7
  steps:
  - script:
      name: install mysql client
      code: |
        apt-get update && \
        apt-get -y install mysql-client && \
        apt-get remove --purge -y $BUILD_PACKAGES $(apt-mark showauto) && rm -rf /var/lib/apt/lists/*
  - script:
      name: prep container
      code: |
        cp $WERCKER_SOURCE_DIR/scripts/server.xml /opt/bitnami/tomcat/server.xml.tmpl && \
        cp $WERCKER_SOURCE_DIR/scripts/entrypoint.sh /opt/bitnami/tomcat/bin/entrypoint.sh && \
        chmod +x /opt/bitnami/tomcat/bin/entrypoint.sh && \
        rm -rf /opt/bitnami/tomcat/webapps && \
        cp -r $WERCKER_SOURCE_DIR/webapps /opt/bitnami/tomcat && \
        mkdir -p /opt/bitnami/tomcat/mysql && \
        cp $WERCKER_SOURCE_DIR/scripts/MySQL_create.sql /opt/bitnami/tomcat/mysql/MySQL_create.sql && \
        cp $WERCKER_SOURCE_DIR/scripts/MySQL_create_quartz_schema.sql /opt/bitnami/tomcat/mysql/MySQL_create_quartz_schema.sql && \
        cp $WERCKER_SOURCE_DIR/scripts/MySQL_create_social.sql /opt/bitnami/tomcat/mysql/MySQL_create_social.sql && \
        cp $WERCKER_SOURCE_DIR/jar/*.jar /opt/bitnami/tomcat/lib

  - internal/docker-push:
      username: $DOCKERHUBUSER
      password: $DOCKERHUBPASS
      email: $DOCKERHUBEMAIL
      repository: ctgbmst/spagobi
      env: SPAGOBI_DIRECTORY=/opt/bitnami/tomcat, MYSQL_SCRIPT_DIRECTORY=/opt/bitnami/tomcat/mysql
      ports: "8080"
      entrypoint: "./entrypoint.sh"
      cmd: "catalina.sh run"
      tag: latest, 5.2
      working-dir: "/opt/bitnami/tomcat/bin"
